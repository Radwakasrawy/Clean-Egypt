import 'bloc/reset_password_bloc.dart';import 'models/reset_password_model.dart';import 'package:clean_egypt/core/app_export.dart';import 'package:clean_egypt/core/utils/validation_functions.dart';import 'package:clean_egypt/widgets/app_bar/appbar_leading_iconbutton_one.dart';import 'package:clean_egypt/widgets/app_bar/custom_app_bar.dart';import 'package:clean_egypt/widgets/custom_checkbox_button.dart';import 'package:clean_egypt/widgets/custom_elevated_button.dart';import 'package:clean_egypt/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class ResetPasswordScreen extends StatelessWidget {ResetPasswordScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<ResetPasswordBloc>(create: (context) => ResetPasswordBloc(ResetPasswordState(resetPasswordModelObj: ResetPasswordModel()))..add(ResetPasswordInitialEvent()), child: ResetPasswordScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Form(key: _formKey, child: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 24.h, vertical: 19.v), child: Column(children: [Text("lbl_reset_password".tr, style: theme.textTheme.titleMedium), SizedBox(height: 54.v), CustomImageView(imagePath: ImageConstant.imgGroup4, height: 168.v, width: 271.h), SizedBox(height: 60.v), Text("msg_create_new_password".tr, style: CustomTextStyles.bodyMediumGray700), SizedBox(height: 22.v), _buildNewPassword(context), SizedBox(height: 10.v), _buildConfirmNewPassword(context), SizedBox(height: 15.v), _buildRememberMe(context), SizedBox(height: 73.v), CustomElevatedButton(text: "lbl_save".tr, onPressed: () {onTapSave(context);}), SizedBox(height: 5.v)]))))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: double.maxFinite, leading: AppbarLeadingIconbuttonOne(imagePath: ImageConstant.imgArrowLeftGray900, margin: EdgeInsets.fromLTRB(26.h, 8.v, 327.h, 8.v), onTap: () {onTapArrowLeft(context);})); } 
/// Section Widget
Widget _buildNewPassword(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 1.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_new_password".tr, style: theme.textTheme.bodySmall), SizedBox(height: 6.v), BlocBuilder<ResetPasswordBloc, ResetPasswordState>(builder: (context, state) {return CustomTextFormField(controller: state.newpasswordController, hintText: "msg".tr, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {context.read<ResetPasswordBloc>().add(ChangePasswordVisibilityEvent(value: !state.isShowPassword));}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 15.v, 15.h, 15.v), child: CustomImageView(imagePath: ImageConstant.imgEye, height: 12.v, width: 13.h))), suffixConstraints: BoxConstraints(maxHeight: 44.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: state.isShowPassword, contentPadding: EdgeInsets.only(left: 23.h, top: 13.v, bottom: 13.v));})])); } 
/// Section Widget
Widget _buildConfirmNewPassword(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 1.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 1.h), child: Text("msg_confirm_new_password".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 7.v), Padding(padding: EdgeInsets.only(left: 1.h), child: BlocBuilder<ResetPasswordBloc, ResetPasswordState>(builder: (context, state) {return CustomTextFormField(controller: state.newpasswordController1, hintText: "msg".tr, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {context.read<ResetPasswordBloc>().add(ChangePasswordVisibilityEvent1(value: !state.isShowPassword1));}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 15.v, 15.h, 15.v), child: CustomImageView(imagePath: ImageConstant.imgEye, height: 12.v, width: 13.h))), suffixConstraints: BoxConstraints(maxHeight: 44.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: state.isShowPassword1, contentPadding: EdgeInsets.only(left: 23.h, top: 13.v, bottom: 13.v));}))])); } 
/// Section Widget
Widget _buildRememberMe(BuildContext context) { return BlocSelector<ResetPasswordBloc, ResetPasswordState, bool?>(selector: (state) => state.rememberMe, builder: (context, rememberMe) {return CustomCheckboxButton(text: "lbl_remember_me".tr, value: rememberMe, textStyle: CustomTextStyles.labelLargeGray700, onChange: (value) {context.read<ResetPasswordBloc>().add(ChangeCheckBoxEvent(value: value));});}); } 

/// Navigates to the previous screen.
onTapArrowLeft(BuildContext context) { NavigatorService.goBack(); } 
/// Navigates to the forgotPasswordSuccessfulScreen when the action is triggered.
onTapSave(BuildContext context) { NavigatorService.pushNamed(AppRoutes.forgotPasswordSuccessfulScreen, ); } 
 }
