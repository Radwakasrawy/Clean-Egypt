import 'bloc/create_account_bloc.dart';import 'models/create_account_model.dart';import 'package:clean_egypt/core/app_export.dart';import 'package:clean_egypt/core/utils/validation_functions.dart';import 'package:clean_egypt/widgets/custom_checkbox_button.dart';import 'package:clean_egypt/widgets/custom_elevated_button.dart';import 'package:clean_egypt/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class CreateAccountScreen extends StatelessWidget {CreateAccountScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<CreateAccountBloc>(create: (context) => CreateAccountBloc(CreateAccountState(createAccountModelObj: CreateAccountModel()))..add(CreateAccountInitialEvent()), child: CreateAccountScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: Form(key: _formKey, child: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 24.h, vertical: 23.v), child: Column(children: [SizedBox(height: 70.v), Text("lbl_creat_account".tr, style: theme.textTheme.titleMedium), SizedBox(height: 21.v), SizedBox(width: 225.h, child: Text("msg_fill_your_information".tr, maxLines: 2, overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: theme.textTheme.bodyMedium)), SizedBox(height: 25.v), _buildPersonalInfoSection(context), SizedBox(height: 22.v), _buildDobValueSection(context), SizedBox(height: 22.v), _buildEmailSection(context), SizedBox(height: 22.v), _buildPasswordSection(context), SizedBox(height: 14.v), _buildTermsSection(context), Spacer(), CustomElevatedButton(text: "lbl_register".tr, onPressed: () {onTapRegister(context);}), SizedBox(height: 17.v), GestureDetector(onTap: () {onTapTxtAlreadyhavean(context);}, child: RichText(text: TextSpan(children: [TextSpan(text: "msg_already_have_an2".tr, style: CustomTextStyles.labelLargeBluegray90001SemiBold), TextSpan(text: "lbl_log_in2".tr, style: CustomTextStyles.labelLargeBluegray600)]), textAlign: TextAlign.left))]))))); } 
/// Section Widget
Widget _buildFirstNameSection(BuildContext context) { return Expanded(child: Padding(padding: EdgeInsets.only(right: 17.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_first_name".tr, style: theme.textTheme.bodySmall), SizedBox(height: 5.v), BlocSelector<CreateAccountBloc, CreateAccountState, TextEditingController?>(selector: (state) => state.firstNameController, builder: (context, firstNameController) {return CustomTextFormField(width: 153.h, controller: firstNameController, hintText: "lbl_lionel".tr);})]))); } 
/// Section Widget
Widget _buildSecondNameSection(BuildContext context) { return Expanded(child: Padding(padding: EdgeInsets.only(left: 17.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_sceond_name".tr, style: theme.textTheme.bodySmall), SizedBox(height: 5.v), BlocSelector<CreateAccountBloc, CreateAccountState, TextEditingController?>(selector: (state) => state.nameController, builder: (context, nameController) {return CustomTextFormField(width: 153.h, controller: nameController, hintText: "lbl_messi".tr);})]))); } 
/// Section Widget
Widget _buildPersonalInfoSection(BuildContext context) { return Padding(padding: EdgeInsets.only(right: 1.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [_buildFirstNameSection(context), _buildSecondNameSection(context)])); } 
/// Section Widget
Widget _buildDobSection(BuildContext context) { return Expanded(child: Padding(padding: EdgeInsets.only(right: 18.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 3.h), child: Text("lbl_dob".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 4.v), BlocSelector<CreateAccountBloc, CreateAccountState, TextEditingController?>(selector: (state) => state.dOBvalueController, builder: (context, dOBvalueController) {return CustomTextFormField(width: 153.h, controller: dOBvalueController, hintText: "lbl_dd_mm_yy".tr, contentPadding: EdgeInsets.symmetric(horizontal: 10.h, vertical: 13.v));})]))); } 
/// Section Widget
Widget _buildEducationalSection(BuildContext context) { return Expanded(child: Padding(padding: EdgeInsets.only(left: 18.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 5.h), child: Text("lbl_educational".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 4.v), BlocSelector<CreateAccountBloc, CreateAccountState, TextEditingController?>(selector: (state) => state.educationalvalueController, builder: (context, educationalvalueController) {return CustomTextFormField(width: 153.h, controller: educationalvalueController, hintText: "lbl_university".tr);})]))); } 
/// Section Widget
Widget _buildDobValueSection(BuildContext context) { return Padding(padding: EdgeInsets.only(right: 1.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [_buildDobSection(context), _buildEducationalSection(context)])); } 
/// Section Widget
Widget _buildEmailSection(BuildContext context) { return Padding(padding: EdgeInsets.only(right: 1.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 3.h), child: Text("lbl_email".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 5.v), BlocSelector<CreateAccountBloc, CreateAccountState, TextEditingController?>(selector: (state) => state.emailController, builder: (context, emailController) {return CustomTextFormField(controller: emailController, hintText: "msg_example_gmail_com".tr, textInputType: TextInputType.emailAddress, validator: (value) {if (value == null || (!isValidEmail(value, isRequired: true))) {return "err_msg_please_enter_valid_email".tr;} return null;});})])); } 
/// Section Widget
Widget _buildPasswordSection(BuildContext context) { return Padding(padding: EdgeInsets.only(right: 1.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 1.h), child: Text("lbl_password".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 5.v), Padding(padding: EdgeInsets.only(left: 1.h), child: BlocBuilder<CreateAccountBloc, CreateAccountState>(builder: (context, state) {return CustomTextFormField(controller: state.passwordController, hintText: "msg".tr, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {context.read<CreateAccountBloc>().add(ChangePasswordVisibilityEvent(value: !state.isShowPassword));}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 16.v, 14.h, 16.v), child: CustomImageView(imagePath: ImageConstant.imgEye, height: 12.v, width: 13.h))), suffixConstraints: BoxConstraints(maxHeight: 44.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: state.isShowPassword, contentPadding: EdgeInsets.only(left: 16.h, top: 13.v, bottom: 13.v));}))])); } 
/// Section Widget
Widget _buildTermsSection(BuildContext context) { return Align(alignment: Alignment.centerLeft, child: BlocSelector<CreateAccountBloc, CreateAccountState, bool?>(selector: (state) => state.termsSection, builder: (context, termsSection) {return CustomCheckboxButton(alignment: Alignment.centerLeft, text: "msg_agree_with_terms".tr, value: termsSection, padding: EdgeInsets.symmetric(vertical: 1.v), textStyle: theme.textTheme.bodySmall, onChange: (value) {context.read<CreateAccountBloc>().add(ChangeCheckBoxEvent(value: value));});})); } 
/// Navigates to the verfiyScreen when the action is triggered.
onTapRegister(BuildContext context) { NavigatorService.pushNamed(AppRoutes.verfiyScreen, ); } 
/// Navigates to the logInScreen when the action is triggered.
onTapTxtAlreadyhavean(BuildContext context) { NavigatorService.pushNamed(AppRoutes.logInScreen, ); } 
 }
