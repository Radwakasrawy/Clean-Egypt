import 'bloc/log_in_bloc.dart';import 'models/log_in_model.dart';import 'package:clean_egypt/core/app_export.dart';import 'package:clean_egypt/core/utils/validation_functions.dart';import 'package:clean_egypt/widgets/custom_elevated_button.dart';import 'package:clean_egypt/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class LogInScreen extends StatelessWidget {LogInScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<LogInBloc>(create: (context) => LogInBloc(LogInState(logInModelObj: LogInModel()))..add(LogInInitialEvent()), child: LogInScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: Form(key: _formKey, child: SizedBox(width: double.maxFinite, child: Column(children: [CustomImageView(imagePath: ImageConstant.imgShapePrimary, height: 132.v, width: 210.h, alignment: Alignment.centerLeft), Text("lbl_welcome".tr, style: theme.textTheme.headlineMedium), SizedBox(height: 12.v), _buildEmailSection(context), SizedBox(height: 25.v), _buildPasswordSection(context), SizedBox(height: 21.v), Align(alignment: Alignment.centerRight, child: GestureDetector(onTap: () {onTapTxtForgetPassword(context);}, child: Padding(padding: EdgeInsets.only(right: 31.h), child: Text("lbl_forget_password".tr, style: CustomTextStyles.bodyMediumBluegray600)))), SizedBox(height: 35.v), CustomElevatedButton(text: "lbl_log_in".tr, margin: EdgeInsets.only(left: 25.h, right: 26.h), onPressed: () {onTapLogIn(context);}), SizedBox(height: 17.v), GestureDetector(onTap: () {onTapTxtDonthaveanaccount(context);}, child: RichText(text: TextSpan(children: [TextSpan(text: "msg_don_t_have_an_account2".tr, style: CustomTextStyles.labelLargeBluegray90001SemiBold), TextSpan(text: "lbl_sign_up".tr, style: CustomTextStyles.labelLargeBluegray600)]), textAlign: TextAlign.left)), SizedBox(height: 5.v)]))))); } 
/// Section Widget
Widget _buildEmailSection(BuildContext context) { return SizedBox(height: 368.v, width: 374.h, child: Stack(alignment: Alignment.bottomLeft, children: [CustomImageView(imagePath: ImageConstant.imgUser16x16, height: 16.adaptSize, width: 16.adaptSize, alignment: Alignment.bottomLeft, margin: EdgeInsets.only(left: 12.h, bottom: 14.v)), BlocSelector<LogInBloc, LogInState, TextEditingController?>(selector: (state) => state.emailController, builder: (context, emailController) {return CustomTextFormField(width: 343.h, controller: emailController, hintText: "lbl_email_address".tr, hintStyle: CustomTextStyles.bodyMediumBluegray90001, textInputType: TextInputType.emailAddress, alignment: Alignment.bottomLeft, validator: (value) {if (value == null || (!isValidEmail(value, isRequired: true))) {return "err_msg_please_enter_valid_email".tr;} return null;}, contentPadding: EdgeInsets.symmetric(horizontal: 30.h, vertical: 12.v), borderDecoration: TextFormFieldStyleHelper.outlineGray, filled: false);}), Align(alignment: Alignment.topLeft, child: Padding(padding: EdgeInsets.only(left: 92.h), child: Text("msg_input_your_details".tr, style: CustomTextStyles.labelLargeGray70001))), CustomImageView(imagePath: ImageConstant.imgSignInPana2, height: 327.adaptSize, width: 327.adaptSize, alignment: Alignment.topLeft, margin: EdgeInsets.only(left: 14.h, top: 7.v)), CustomImageView(imagePath: ImageConstant.imgShareLinkPana, height: 203.adaptSize, width: 203.adaptSize, alignment: Alignment.bottomRight, margin: EdgeInsets.only(bottom: 53.v))])); } 
/// Section Widget
Widget _buildPasswordSection(BuildContext context) { return Align(alignment: Alignment.centerLeft, child: Container(height: 46.v, width: 343.h, margin: EdgeInsets.only(left: 19.h), child: Stack(alignment: Alignment.center, children: [CustomImageView(imagePath: ImageConstant.imgLock16x16, height: 16.adaptSize, width: 16.adaptSize, alignment: Alignment.topLeft, margin: EdgeInsets.only(left: 12.h, top: 14.v)), BlocBuilder<LogInBloc, LogInState>(builder: (context, state) {return CustomTextFormField(width: 343.h, controller: state.passwordController, hintText: "lbl_password".tr, hintStyle: CustomTextStyles.bodyMediumBluegray90001, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, alignment: Alignment.center, suffix: InkWell(onTap: () {context.read<LogInBloc>().add(ChangePasswordVisibilityEvent(value: !state.isShowPassword));}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 12.v, 14.h, 12.v), child: CustomImageView(imagePath: ImageConstant.imgFluenteye20filled, height: 22.adaptSize, width: 22.adaptSize))), suffixConstraints: BoxConstraints(maxHeight: 46.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: state.isShowPassword, contentPadding: EdgeInsets.only(left: 30.h, top: 12.v, bottom: 12.v), borderDecoration: TextFormFieldStyleHelper.outlineGray, filled: false);})]))); } 
/// Navigates to the sendCodeScreen when the action is triggered.
onTapTxtForgetPassword(BuildContext context) { NavigatorService.pushNamed(AppRoutes.sendCodeScreen, ); } 
/// Navigates to the confirmationScreen when the action is triggered.
onTapLogIn(BuildContext context) { NavigatorService.pushNamed(AppRoutes.confirmationScreen, ); } 
/// Navigates to the createAccountScreen when the action is triggered.
onTapTxtDonthaveanaccount(BuildContext context) { NavigatorService.pushNamed(AppRoutes.createAccountScreen, ); } 
 }
