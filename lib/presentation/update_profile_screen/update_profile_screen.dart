import 'bloc/update_profile_bloc.dart';import 'models/update_profile_model.dart';import 'package:clean_egypt/core/app_export.dart';import 'package:clean_egypt/core/utils/validation_functions.dart';import 'package:clean_egypt/widgets/app_bar/appbar_leading_iconbutton_one.dart';import 'package:clean_egypt/widgets/app_bar/appbar_subtitle_two.dart';import 'package:clean_egypt/widgets/app_bar/custom_app_bar.dart';import 'package:clean_egypt/widgets/custom_drop_down.dart';import 'package:clean_egypt/widgets/custom_elevated_button.dart';import 'package:clean_egypt/widgets/custom_icon_button.dart';import 'package:clean_egypt/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';
// ignore_for_file: must_be_immutable
class UpdateProfileScreen extends StatelessWidget {UpdateProfileScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<UpdateProfileBloc>(create: (context) => UpdateProfileBloc(UpdateProfileState(updateProfileModelObj: UpdateProfileModel()))..add(UpdateProfileInitialEvent()), child: UpdateProfileScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Form(key: _formKey, child: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 22.h, vertical: 17.v), child: Column(children: [SizedBox(height: 100.v, width: 98.h, child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.center, child: Container(height: 100.v, width: 98.h, decoration: BoxDecoration(color: appTheme.blueGray10001, borderRadius: BorderRadius.circular(50.h)))), Align(alignment: Alignment.center, child: SizedBox(height: 100.v, width: 98.h, child: Stack(alignment: Alignment.bottomRight, children: [CustomImageView(imagePath: ImageConstant.imgProfilePhoto, height: 100.v, width: 98.h, radius: BorderRadius.circular(49.h), alignment: Alignment.center), CustomIconButton(height: 32.adaptSize, width: 32.adaptSize, padding: EdgeInsets.all(8.h), decoration: IconButtonStyleHelper.outlineWhiteATL16, alignment: Alignment.bottomRight, child: CustomImageView(imagePath: ImageConstant.imgEdit))])))])), SizedBox(height: 31.v), _buildName(context), SizedBox(height: 24.v), _buildPhoneNumber(context), SizedBox(height: 24.v), _buildEmail(context), SizedBox(height: 22.v), _buildDateOfBirth(context), SizedBox(height: 22.v), _buildGender(context), SizedBox(height: 50.v), CustomElevatedButton(text: "lbl_update_profile".tr, buttonTextStyle: CustomTextStyles.titleMediumWhiteA7000118, onPressed: () {onTapUpdateProfile(context);}), SizedBox(height: 5.v)]))))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 65.h, leading: AppbarLeadingIconbuttonOne(imagePath: ImageConstant.imgArrowLeftGray900, margin: EdgeInsets.only(left: 25.h, top: 8.v, bottom: 8.v), onTap: () {onTapArrowLeft(context);}), centerTitle: true, title: AppbarSubtitleTwo(text: "lbl_your_profile".tr)); } 
/// Section Widget
Widget _buildName(BuildContext context) { return Container(margin: EdgeInsets.only(right: 2.h), padding: EdgeInsets.symmetric(horizontal: 1.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 3.h), child: Text("lbl_name".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 5.v), Padding(padding: EdgeInsets.only(left: 2.h), child: BlocSelector<UpdateProfileBloc, UpdateProfileState, TextEditingController?>(selector: (state) => state.nameController, builder: (context, nameController) {return CustomTextFormField(controller: nameController, hintText: "lbl_lionel_messi".tr, hintStyle: theme.textTheme.bodySmall!);}))])); } 
/// Section Widget
Widget _buildPhoneNumber(BuildContext context) { return Padding(padding: EdgeInsets.only(right: 2.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 3.h), child: Text("lbl_phone_nember".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 4.v), BlocSelector<UpdateProfileBloc, UpdateProfileState, TextEditingController?>(selector: (state) => state.phoneController, builder: (context, phoneController) {return CustomTextFormField(controller: phoneController, hintText: "lbl_01000000000".tr, hintStyle: theme.textTheme.bodySmall!, textInputType: TextInputType.phone, suffix: Padding(padding: EdgeInsets.fromLTRB(30.h, 15.v, 15.h, 10.v), child: Text("lbl_change".tr, style: TextStyle(color: Color(0XFF488466), fontSize: 12.fSize, fontFamily: 'Poppins', fontWeight: FontWeight.w400))), suffixConstraints: BoxConstraints(maxHeight: 44.v), validator: (value) {if (!isValidPhone(value)) {return "err_msg_please_enter_valid_phone_number".tr;} return null;});})])); } 
/// Section Widget
Widget _buildEmail(BuildContext context) { return Padding(padding: EdgeInsets.only(right: 2.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 1.h), child: Text("lbl_email".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 4.v), BlocSelector<UpdateProfileBloc, UpdateProfileState, TextEditingController?>(selector: (state) => state.emailController, builder: (context, emailController) {return CustomTextFormField(controller: emailController, hintText: "msg_example_gmail_com".tr, textInputType: TextInputType.emailAddress, validator: (value) {if (value == null || (!isValidEmail(value, isRequired: true))) {return "err_msg_please_enter_valid_email".tr;} return null;});})])); } 
/// Section Widget
Widget _buildDateOfBirth(BuildContext context) { return Padding(padding: EdgeInsets.only(right: 2.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_dob".tr, style: theme.textTheme.bodySmall), SizedBox(height: 6.v), BlocSelector<UpdateProfileBloc, UpdateProfileState, TextEditingController?>(selector: (state) => state.dOBvalueController, builder: (context, dOBvalueController) {return CustomTextFormField(controller: dOBvalueController, hintText: "lbl_dd_mm_yy".tr, textInputAction: TextInputAction.done);})])); } 
/// Section Widget
Widget _buildGender(BuildContext context) { return Padding(padding: EdgeInsets.only(right: 2.h), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: EdgeInsets.only(left: 1.h), child: Text("lbl_gender".tr, style: theme.textTheme.bodySmall)), SizedBox(height: 4.v), BlocSelector<UpdateProfileBloc, UpdateProfileState, UpdateProfileModel?>(selector: (state) => state.updateProfileModelObj, builder: (context, updateProfileModelObj) {return CustomDropDown(hintText: "lbl_select".tr, hintStyle: CustomTextStyles.bodySmallBluegray90001, items: updateProfileModelObj?.dropdownItemList ?? [], contentPadding: EdgeInsets.symmetric(horizontal: 22.h, vertical: 13.v), borderDecoration: DropDownStyleHelper.outlineGray, onChanged: (value) {context.read<UpdateProfileBloc>().add(ChangeDropDownEvent(value: value));});})])); } 

/// Navigates to the previous screen.
onTapArrowLeft(BuildContext context) { NavigatorService.goBack(); } 
/// Navigates to the profileScreen when the action is triggered.
onTapUpdateProfile(BuildContext context) { NavigatorService.pushNamed(AppRoutes.profileScreen, ); } 
 }
