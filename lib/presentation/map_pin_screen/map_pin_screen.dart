import 'bloc/map_pin_bloc.dart';import 'dart:async';import 'models/map_pin_model.dart';import 'package:clean_egypt/core/app_export.dart';import 'package:clean_egypt/presentation/event_page/event_page.dart';import 'package:clean_egypt/widgets/app_bar/appbar_subtitle_five.dart';import 'package:clean_egypt/widgets/app_bar/appbar_title_image.dart';import 'package:clean_egypt/widgets/app_bar/appbar_trailing_iconbutton.dart';import 'package:clean_egypt/widgets/app_bar/appbar_trailing_image.dart';import 'package:clean_egypt/widgets/app_bar/custom_app_bar.dart';import 'package:clean_egypt/widgets/custom_bottom_bar.dart';import 'package:clean_egypt/widgets/custom_floating_button.dart';import 'package:clean_egypt/widgets/custom_icon_button.dart';import 'package:clean_egypt/widgets/custom_search_view.dart';import 'package:flutter/material.dart';import 'package:google_maps_flutter/google_maps_flutter.dart';
// ignore_for_file: must_be_immutable
class MapPinScreen extends StatelessWidget {MapPinScreen({Key? key}) : super(key: key);

Completer<GoogleMapController> googleMapController = Completer();

GlobalKey<NavigatorState> navigatorKey = GlobalKey();

static Widget builder(BuildContext context) { return BlocProvider<MapPinBloc>(create: (context) => MapPinBloc(MapPinState(mapPinModelObj: MapPinModel()))..add(MapPinInitialEvent()), child: MapPinScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: SizedBox(width: double.maxFinite, child: Column(mainAxisSize: MainAxisSize.min, children: [SizedBox(height: 9.v), Container(padding: EdgeInsets.symmetric(horizontal: 14.h), child: Column(children: [_buildSearchRow(context), SizedBox(height: 17.v), _buildCategoriesRow(context), SizedBox(height: 9.v), _buildMap(context)]))])), bottomNavigationBar: _buildNavigationMenu(context), floatingActionButton: _buildFloatingActionButton(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(title: Padding(padding: EdgeInsets.only(left: 26.h), child: Column(children: [AppbarSubtitleFive(text: "lbl_location".tr, margin: EdgeInsets.only(right: 126.h)), SizedBox(height: 6.v), Row(children: [AppbarTitleImage(imagePath: ImageConstant.imgLinkedin, margin: EdgeInsets.symmetric(vertical: 1.v)), Padding(padding: EdgeInsets.only(left: 9.h), child: RichText(text: TextSpan(children: [TextSpan(text: "lbl_alexandria2".tr, style: theme.textTheme.titleSmall), TextSpan(text: "lbl_wardian".tr, style: CustomTextStyles.bodyMediumBlack90015)]), textAlign: TextAlign.left))])])), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgArrowDown, margin: EdgeInsets.fromLTRB(7.h, 33.v, 1.h, 13.v)), AppbarTrailingIconbutton(imagePath: ImageConstant.imgUserBlack900, margin: EdgeInsets.only(left: 116.h, top: 22.v, right: 22.h), onTap: () {onTapUser(context);})]); } 
/// Section Widget
Widget _buildSearchRow(BuildContext context) { return Padding(padding: EdgeInsets.only(left: 12.h, right: 1.h), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Expanded(child: Padding(padding: EdgeInsets.only(top: 2.v), child: BlocSelector<MapPinBloc, MapPinState, TextEditingController?>(selector: (state) => state.searchController, builder: (context, searchController) {return CustomSearchView(controller: searchController, hintText: "lbl_search".tr);}))), Padding(padding: EdgeInsets.only(left: 10.h), child: CustomIconButton(height: 44.adaptSize, width: 44.adaptSize, padding: EdgeInsets.all(11.h), decoration: IconButtonStyleHelper.fillPrimary, child: CustomImageView(imagePath: ImageConstant.imgUserGray10001)))])); } 
/// Section Widget
Widget _buildCategoriesRow(BuildContext context) { return Container(margin: EdgeInsets.only(right: 1.h), padding: EdgeInsets.symmetric(horizontal: 46.h, vertical: 16.v), decoration: AppDecoration.outlineBlueGray.copyWith(borderRadius: BorderRadiusStyle.roundedBorder25), child: Row(mainAxisAlignment: MainAxisAlignment.center, crossAxisAlignment: CrossAxisAlignment.end, children: [Padding(padding: EdgeInsets.only(top: 5.v, bottom: 4.v), child: Column(crossAxisAlignment: CrossAxisAlignment.end, children: [CustomImageView(imagePath: ImageConstant.imgStar1, height: 25.v, width: 28.h, margin: EdgeInsets.only(right: 4.h)), SizedBox(height: 3.v), Text("lbl_4875".tr, style: CustomTextStyles.bodyLargeComicSansMSBluegray60001), Padding(padding: EdgeInsets.only(right: 1.h), child: Text("lbl_points".tr, style: CustomTextStyles.labelLargeBluegray60001))])), Padding(padding: EdgeInsets.only(left: 27.h), child: SizedBox(height: 82.v, child: VerticalDivider(width: 2.h, thickness: 2.v, color: appTheme.blueGray100, indent: 5.h, endIndent: 1.h))), Padding(padding: EdgeInsets.only(left: 24.h, bottom: 1.v), child: Column(children: [Padding(padding: EdgeInsets.only(right: 12.h), child: _buildThreeStack(context, dynamicText: "lbl_15".tr, dynamicImage: ImageConstant.imgLike)), SizedBox(height: 3.v), SizedBox(height: 18.v, width: 71.h, child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.centerLeft, child: Text("lbl_complaints".tr, style: CustomTextStyles.bodySmallComicSansMSWhiteA70001)), Align(alignment: Alignment.center, child: Text("lbl_complaints".tr, style: CustomTextStyles.labelLargeBluegray60001))]))])), Padding(padding: EdgeInsets.only(left: 19.h), child: SizedBox(height: 82.v, child: VerticalDivider(width: 2.h, thickness: 2.v, color: appTheme.blueGray100, indent: 5.h, endIndent: 1.h))), Padding(padding: EdgeInsets.only(left: 29.h, top: 5.v), child: Column(children: [Padding(padding: EdgeInsets.only(right: 5.h), child: _buildThreeStack(context, dynamicText: "lbl_3".tr, dynamicImage: ImageConstant.imgExpired)), SizedBox(height: 3.v), Text("lbl_pending".tr, style: CustomTextStyles.labelLargeBluegray60001)]))])); } 
/// Section Widget
Widget _buildMap(BuildContext context) { return SizedBox(height: 460.v, width: 346.h, child: GoogleMap(mapType: MapType.normal, initialCameraPosition: CameraPosition(target: LatLng(37.43296265331129, -122.08832357078792), zoom: 14.4746), onMapCreated: (GoogleMapController controller) {googleMapController.complete(controller);}, zoomControlsEnabled: false, zoomGesturesEnabled: false, myLocationButtonEnabled: false, myLocationEnabled: false)); } 
/// Section Widget
Widget _buildNavigationMenu(BuildContext context) { return CustomBottomBar(onChanged: (BottomBarEnum type) {Navigator.pushNamed(navigatorKey.currentContext!, getCurrentRoute(type));}); } 
/// Section Widget
Widget _buildFloatingActionButton(BuildContext context) { return CustomFloatingButton(height: 56, width: 56, backgroundColor: appTheme.blueGray60001, child: CustomImageView(imagePath: ImageConstant.imgGridWhiteA70001, height: 28.0.v, width: 28.0.h)); } 
/// Common widget
Widget _buildThreeStack(BuildContext context, {required String dynamicText, required String dynamicImage, }) { return SizedBox(height: 54.v, width: 36.h, child: Stack(alignment: Alignment.topCenter, children: [Align(alignment: Alignment.bottomLeft, child: Padding(padding: EdgeInsets.only(left: 5.h), child: Text(dynamicText, style: CustomTextStyles.bodyLargeComicSansMSBluegray60001.copyWith(color: appTheme.blueGray60001)))), CustomImageView(imagePath: dynamicImage, height: 36.adaptSize, width: 36.adaptSize, alignment: Alignment.topCenter)])); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Thumbsup: return AppRoutes.eventPage; case BottomBarEnum.Linkedinwhitea70001: return "/"; case BottomBarEnum.Contrastwhitea70001: return "/"; case BottomBarEnum.Lockwhitea70001: return "/"; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(BuildContext context, String currentRoute, ) { switch (currentRoute) {case AppRoutes.eventPage: return EventPage(); default: return DefaultWidget();} } 
/// Navigates to the notificationScreen when the action is triggered.
onTapUser(BuildContext context) { NavigatorService.pushNamed(AppRoutes.notificationScreen, ); } 
 }
