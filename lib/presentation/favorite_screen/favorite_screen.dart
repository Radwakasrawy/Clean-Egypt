import '../favorite_screen/widgets/eventlist_item_widget.dart';import '../favorite_screen/widgets/favoriteevents_item_widget.dart';import 'bloc/favorite_bloc.dart';import 'models/eventlist_item_model.dart';import 'models/favorite_model.dart';import 'models/favoriteevents_item_model.dart';import 'package:clean_egypt/core/app_export.dart';import 'package:clean_egypt/widgets/app_bar/appbar_leading_iconbutton_one.dart';import 'package:clean_egypt/widgets/app_bar/appbar_subtitle.dart';import 'package:clean_egypt/widgets/app_bar/custom_app_bar.dart';import 'package:flutter/material.dart';import 'package:grouped_list/grouped_list.dart';class FavoriteScreen extends StatelessWidget {const FavoriteScreen({Key? key}) : super(key: key);

static Widget builder(BuildContext context) { return BlocProvider<FavoriteBloc>(create: (context) => FavoriteBloc(FavoriteState(favoriteModelObj: FavoriteModel()))..add(FavoriteInitialEvent()), child: FavoriteScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(appBar: _buildAppBar(context), body: SizedBox(width: SizeUtils.width, child: SingleChildScrollView(padding: EdgeInsets.only(top: 24.v), child: Padding(padding: EdgeInsets.only(left: 31.h, right: 35.h), child: Column(children: [_buildEventList(context), SizedBox(height: 40.v), _buildPastEvents(context), SizedBox(height: 8.v), _buildFavoriteEvents(context)])))))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 65.h, leading: AppbarLeadingIconbuttonOne(imagePath: ImageConstant.imgArrowLeftGray900, margin: EdgeInsets.only(left: 25.h, top: 8.v, bottom: 8.v), onTap: () {onTapArrowLeft(context);}), centerTitle: true, title: AppbarSubtitle(text: "msg_your_assigned_events".tr)); } 
/// Section Widget
Widget _buildEventList(BuildContext context) { return BlocSelector<FavoriteBloc, FavoriteState, FavoriteModel?>(selector: (state) => state.favoriteModelObj, builder: (context, favoriteModelObj) {return GroupedListView<EventlistItemModel, String>(shrinkWrap: true, stickyHeaderBackgroundColor: Colors.transparent, elements: favoriteModelObj?.eventlistItemList ?? [], groupBy: (element) => element.groupBy!, sort: false, groupSeparatorBuilder: (String value) {return Padding(padding: EdgeInsets.only(top: 39.v, bottom: 10.v), child: Column(children: [Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text(value, style: CustomTextStyles.titleMediumTeal8000118_1.copyWith(color: appTheme.teal80001)), Padding(padding: EdgeInsets.only(top: 13.v, bottom: 12.v), child: SizedBox(width: 204.h, child: Divider(color: appTheme.blue900.withOpacity(0.2))))])]));}, itemBuilder: (context, model) {return EventlistItemWidget(model);}, separator: SizedBox(height: 10.v));}); } 
/// Section Widget
Widget _buildPastEvents(BuildContext context) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("lbl_past_events".tr, style: CustomTextStyles.titleMediumTeal8000118_1), Padding(padding: EdgeInsets.only(top: 13.v, bottom: 12.v), child: SizedBox(width: 202.h, child: Divider(color: appTheme.blue900.withOpacity(0.2))))]); } 
/// Section Widget
Widget _buildFavoriteEvents(BuildContext context) { return BlocSelector<FavoriteBloc, FavoriteState, FavoriteModel?>(selector: (state) => state.favoriteModelObj, builder: (context, favoriteModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: 10.v);}, itemCount: favoriteModelObj?.favoriteeventsItemList.length ?? 0, itemBuilder: (context, index) {FavoriteeventsItemModel model = favoriteModelObj?.favoriteeventsItemList[index] ?? FavoriteeventsItemModel(); return FavoriteeventsItemWidget(model);});}); } 

/// Navigates to the previous screen.
onTapArrowLeft(BuildContext context) { NavigatorService.goBack(); } 
 }
